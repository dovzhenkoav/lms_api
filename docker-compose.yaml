version: '3'

services:

  redis:
    image: redis:latest
    ports:
      - '6379:6379'
    healthcheck:
      test: [ "CMD-SHELL", "redis_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: lms_app
    restart: always
    env_file: ./.env
    container_name: lms_db
    user: postgres
    environment:
      - POSTGRES_PASSWORD=1q2w3e
      - POSTGRES_DB=lms_app
      - PGDATA=/var/lib/postgresql/data/
    volumes:
      - posgres_data:/var/lib/postgresql/data/
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    tty: true
    command: >
      bash -c "python manage.py makemigrations 
      && python manage.py migrate
      && python manage.py runserver 0.0.0.0:8000"
    ports:
      - '8000:8000'
    volumes:
      - .:/code
    depends_on:
      postgres:
        condition: service_healthy

  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO
    depends_on:
      - redis
      - postgres
      - app
    healthcheck:
      test: [ "CMD-SHELL", "celery_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  celery_beat:
    build: .
    restart: always
    tty: true
    command: celery -A config beat -l INFO -S django
    depends_on:
      - redis
      - postgres
      - app
    healthcheck:
      test: [ "CMD-SHELL", "celery_beat_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  posgres_data: